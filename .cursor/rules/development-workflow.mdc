---
description: 
globs: 
alwaysApply: false
---
# 开发工作流程

## 项目启动

### 环境要求
- Node.js 16+
- HBuilderX 或支持 uni-app 的开发工具
- 各平台开发环境（如需真机调试）

### 开发命令
```bash
# 微信小程序
npm run dev:mp-weixin

# H5
npm run dev:h5

# App
npm run dev:app
```

## 代码组织

### 文件命名规范
- 页面文件：小写，使用短横线连接 `user-profile.vue`
- 组件文件：PascalCase `UserProfile.vue`
- 工具文件：camelCase `userUtils.js`

### 导入规范
```javascript
// 页面组件导入
import UserProfile from '@/components/UserProfile.vue'

// 工具函数导入
import { formatDate } from '@/utils/dateUtils.js'

// uni-app API 直接使用
uni.navigateTo()
```

## 调试和测试

### 控制台调试
```javascript
console.log('调试信息:', data)
console.error('错误信息:', error)
```

### 平台兼容性测试
- 在不同平台上测试功能
- 检查 [manifest.json](mdc:manifest.json) 配置
- 验证各平台特有功能

## 版本发布

### 版本管理
在 [manifest.json](mdc:manifest.json) 中更新：
- `versionName`: 版本号（如 1.0.1）
- `versionCode`: 版本代码（数字递增）

### 打包配置
- 检查 [pages.json](mdc:pages.json) 页面配置
- 确认 [manifest.json](mdc:manifest.json) 平台设置
- 验证静态资源路径正确

## 性能优化

### 图片优化
- 使用合适的图片格式
- 压缩图片大小
- 使用 `mode` 属性优化显示

### 代码优化
- 避免在模板中使用复杂表达式
- 合理使用计算属性和监听器
- 按需加载组件和页面

## 最佳实践提醒

1. 始终参考 [pages/index/index.vue](mdc:pages/index/index.vue) 的代码结构
2. 新功能开发前查看现有配置文件
3. 遵循 uni-app 官方文档规范
4. 保持代码简洁和可维护性

